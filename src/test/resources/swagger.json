{
  "swagger": "2.0",
  "info": {
    "version": "v 2.0.0",
    "title": "SMARTOFFICE"
  },
  "paths": {
    "/api/web/events/flights/airports": {
      "get": {
        "tags": [
          "Airports"
        ],
        "summary": "Get airports",
        "operationId": "GetAirports",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Name",
              "Code",
              "Country",
              "City"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[AirportInfoDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Airports"
        ],
        "summary": "Create airport",
        "operationId": "CreateAirport",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateAirportDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AirportDto"
            }
          }
        }
      }
    },
    "/api/web/events/flights/airports/autocomplete": {
      "get": {
        "tags": [
          "Airports"
        ],
        "summary": "Get airports autocomplete",
        "operationId": "GetAirportsAutocomplete",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AirportInfoDto"
              }
            }
          }
        }
      }
    },
    "/api/web/events/flights/airports/{id}": {
      "get": {
        "tags": [
          "Airports"
        ],
        "summary": "Get airport",
        "operationId": "GetAirport",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AirportDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Airports"
        ],
        "summary": "Edit airport",
        "operationId": "EditAirport",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditAirportDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AirportDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Airports"
        ],
        "summary": "Delete airport",
        "operationId": "DeleteAirport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/events/flights/airports/list": {
      "post": {
        "tags": [
          "Airports"
        ],
        "summary": "Get list of airports by their IDs for mobile client",
        "operationId": "GetAirportsListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AirportIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AirportMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/assignments/ldap-performers/list": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Search for performers in Active Directory",
        "operationId": "SearchPerformersInAd",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssignmentPerformerSearchResultDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/assignments/ldap-performers/list": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Search for performers in Active Directory",
        "operationId": "SearchPerformersInAd",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssignmentPerformerSearchResultDto"
              }
            }
          }
        }
      }
    },
    "/api/web/assignments": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get assignments list",
        "operationId": "GetAssignments",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Performer",
              "Priority",
              "Status",
              "IsExpired"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "Priority",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Low",
              "Medium",
              "High",
              "Critical"
            ]
          },
          {
            "name": "Performer",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "EmailSent",
              "Working",
              "Completed",
              "Cancelled"
            ]
          },
          {
            "name": "IsExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[AssignmentListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Create assignment",
        "operationId": "CreateAssignment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateAssignmentDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssignmentOutputDto"
            }
          }
        }
      }
    },
    "/api/web/assignments/{assignmentId}": {
      "get": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get assignment by id",
        "operationId": "GetAssignment",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssignmentOutputDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assignment"
        ],
        "summary": "Edit assignment",
        "operationId": "EditAssignment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditAssignmentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssignmentOutputDto"
            }
          }
        }
      }
    },
    "/api/web/assignments/status/{assignmentId}": {
      "put": {
        "tags": [
          "Assignment"
        ],
        "summary": "Edit assignment status",
        "operationId": "EditStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditAssignmentStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssignmentOutputDto"
            }
          }
        }
      }
    },
    "/api/web/assignments/{id}": {
      "delete": {
        "tags": [
          "Assignment"
        ],
        "summary": "Delete assignment by id",
        "operationId": "DeleteAssignment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/assignments/list": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get list of assignments by their Ids.",
        "operationId": "GetAssignmentListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignmentListFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssignmentMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/assignments/assignmentToPerformer/list": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Get list of assignment-performer links by their Ids",
        "operationId": "GetAssignmentToPerformerListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignmentToPerformerListFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssignmentToPerformerMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/assignments/comment/{id}": {
      "get": {
        "tags": [
          "AssignmentComment"
        ],
        "summary": "Get assignment comment by Id",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssignmentCommentOutputDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AssignmentComment"
        ],
        "summary": "Edit assignment comment.",
        "operationId": "EditAssignmentComment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditAssignmentCommentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssignmentCommentOutputDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AssignmentComment"
        ],
        "summary": "Delete assignment comment.",
        "operationId": "Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/assignments/comment": {
      "post": {
        "tags": [
          "AssignmentComment"
        ],
        "summary": "Create new assignment comment.",
        "operationId": "Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "createAssignmentCommentDto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateAssignmentCommentDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssignmentCommentOutputDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/mobile/assignments/comment/list": {
      "post": {
        "tags": [
          "AssignmentComment"
        ],
        "summary": "Get list of assignment comments by their Ids.",
        "operationId": "GetAssignmentCommentsListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignmentCommentIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssignmentCommentMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login.",
        "operationId": "LoginAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "dto with user name and password",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserLoginDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login.",
        "operationId": "LoginAsync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "dto with user name and password",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserLoginDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/auth/cert": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login by certificate",
        "operationId": "LoginByCertificate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DeviceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceResponseDto"
            }
          }
        }
      }
    },
    "/api/web/auth/check": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Check",
        "operationId": "Check",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout.",
        "operationId": "Logout",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/web/documents/backgrounds": {
      "post": {
        "tags": [
          "Backgrounds"
        ],
        "operationId": "CreateGalleryItem",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateBackgroundDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BackgroundDto"
            }
          }
        }
      }
    },
    "/api/web/documents/backgrounds/thumbnails": {
      "get": {
        "tags": [
          "Backgrounds"
        ],
        "operationId": "GetGalleryThumbnails",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[BackgroundDto]"
            }
          }
        }
      }
    },
    "/api/web/documents/backgrounds/{thumbnailId}": {
      "get": {
        "tags": [
          "Backgrounds"
        ],
        "operationId": "GetGalleryItem",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "thumbnailId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BackgroundDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backgrounds"
        ],
        "operationId": "DeleteGalleryItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "thumbnailId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/biographies/all": {
      "get": {
        "tags": [
          "Biographies"
        ],
        "summary": "Get filtered list of Biographies.",
        "operationId": "GetList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LastName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "MiddleName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CompanyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "BirthDay",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthMonth",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthYear",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BiographyOutputDto"
              }
            }
          }
        }
      }
    },
    "/api/web/biographies": {
      "get": {
        "tags": [
          "Biographies"
        ],
        "summary": "Get list of Biographies by search.",
        "operationId": "GetBiographyAutocompleteList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BiographyAutocompliteOutputDto"
              }
            }
          }
        }
      }
    },
    "/api/web/biographies/workplaces": {
      "get": {
        "tags": [
          "Biographies"
        ],
        "summary": "Get list of company names from all workplaces by search string.",
        "operationId": "GetCompanyNames",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/mobile/biographies/list": {
      "post": {
        "tags": [
          "Biographies"
        ],
        "summary": "Get list of biographies corresponding to sent Ids.",
        "operationId": "GetListByIds",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BiographyItemIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BiographyMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/biographies/workplaces/list": {
      "post": {
        "tags": [
          "Biographies"
        ],
        "summary": "Get workplaces list by their Ids",
        "operationId": "GetWorkplacesByIds",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BiographyItemIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkplaceMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/biographies/education/list": {
      "post": {
        "tags": [
          "Biographies"
        ],
        "summary": "Get educations list by their Ids",
        "operationId": "GetEducationsByIds",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BiographyItemIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/EducationMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/biographies/spouse/list": {
      "post": {
        "tags": [
          "Biographies"
        ],
        "summary": "Get spouses list by their Ids",
        "operationId": "GetSpousesByIds",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BiographyItemIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/SpouseMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/references/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get companies",
        "operationId": "GetCompanies",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Name"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[CompanyDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create company",
        "operationId": "CreateCompany",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateCompanyDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyDto"
            }
          }
        }
      }
    },
    "/api/web/references/companies/autocomplete": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get companies autocomplete",
        "operationId": "GetCompaniesAutocomplete",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyInfoDto"
              }
            }
          }
        }
      }
    },
    "/api/web/references/companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get company",
        "operationId": "GetCompany",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Edit company",
        "operationId": "EditCompany",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditCompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete company",
        "operationId": "DeleteCompany",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/references/companies/list": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Get companies mobile list",
        "operationId": "GetCompaniesMobileList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/events/conferences": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get conferences",
        "operationId": "GetConferences",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "DateStart",
              "DateEnd",
              "EventCount",
              "EventStatus",
              "NoteCount"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "DateStartFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateStartTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateEndFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateEndTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "EventStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "Directed",
              "Canceled",
              "Completed"
            ]
          },
          {
            "name": "HasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "HasEvent",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[ConferenceListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Conferences"
        ],
        "summary": "Create conference",
        "operationId": "CreateConference",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateConferenceDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConferenceDto"
            }
          }
        }
      }
    },
    "/api/web/events/conferences/autocomplete": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get conferences autocomplete",
        "operationId": "GetConferencesAutoComplete",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConferenceAutocompleteDto"
              }
            }
          }
        }
      }
    },
    "/api/web/events/conferences/{id}": {
      "get": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get conference",
        "operationId": "GetConference",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConferenceDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Conferences"
        ],
        "summary": "Edit conference",
        "operationId": "EditConference",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditConferenceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConferenceDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conferences"
        ],
        "summary": "Delete conference",
        "operationId": "DeleteConference",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/events/conferences/{id}/status": {
      "put": {
        "tags": [
          "Conferences"
        ],
        "summary": "Edit conference status",
        "operationId": "EditConferenceStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditEventStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConferenceDto"
            }
          }
        }
      }
    },
    "/api/mobile/events/conferences/list": {
      "post": {
        "tags": [
          "Conferences"
        ],
        "summary": "Get conferences list by their IDs for mobile client",
        "operationId": "GetConferencesListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConferenceMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts for current user.",
        "operationId": "GetList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BirthDate",
              "FullName",
              "CompanyName",
              "RelationToStructure",
              "NoteCount",
              "Status"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "Published"
            ]
          },
          {
            "name": "HasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "BirthDayFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthDayTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthMonthFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthMonthTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthYearFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthYearTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ToWishHappyBirthday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[ContactListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create new contact.",
        "operationId": "Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "createContactDto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateContactDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactOutputDto"
            }
          }
        }
      }
    },
    "/api/web/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id.",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id Contact",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactOutputDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update existing contact.",
        "operationId": "Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditContactDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactOutputDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact.",
        "operationId": "Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/contacts/export": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Export contacts to Excel spreadsheet.",
        "operationId": "ExportAllToExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BirthDate",
              "FullName",
              "CompanyName",
              "RelationToStructure",
              "NoteCount",
              "Status"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "Published"
            ]
          },
          {
            "name": "HasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "BirthDayFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthDayTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthMonthFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthMonthTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthYearFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BirthYearTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ToWishHappyBirthDay",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/contacts/import": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create new contacts from Excel spreadsheet.",
        "operationId": "ImportFromExcel",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactImportExceptionDto"
              }
            }
          }
        }
      }
    },
    "/api/web/contacts/exportPDF/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Export contact by id to PDF.",
        "operationId": "ExportByIdToPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/contacts/exportPDF/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Export contact by id to PDF.",
        "operationId": "ExportByIdToPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/contacts/exportWord/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Export contact by id to Word document.",
        "operationId": "ExportByIdToWord",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/contacts/status/{id}": {
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Publish a contact or return to draft",
        "operationId": "EditContactStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "status",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditContactStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ContactOutputDto"
            }
          }
        }
      }
    },
    "/api/web/contacts/autocomplete": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "operationId": "GetContactsAutocompleteList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactsAutocompleteListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/contacts/list": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts by their Ids.",
        "operationId": "GetContactsListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/contacts/phones/list": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of phones by their Ids.",
        "operationId": "GetPhonesListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PhoneMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/contacts/emails/list": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get emails list by their Ids",
        "operationId": "GetEmailsListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmailMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/contacts/messengers/list": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get messengers list by their Ids",
        "operationId": "GetMessengersListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContactIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessengerMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/digests/{digestId}": {
      "get": {
        "tags": [
          "Digests"
        ],
        "summary": "Get a digest by id",
        "operationId": "GetDigest",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "digestId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DigestDto"
            }
          }
        }
      }
    },
    "/api/web/digests": {
      "get": {
        "tags": [
          "Digests"
        ],
        "summary": "Get days digests",
        "operationId": "GetDigests",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Month",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CategoryName",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Morning",
              "Foreign",
              "DayPicture"
            ]
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PublishedAt",
              "NoteCount",
              "UpdatedAt",
              "Status"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "Published"
            ]
          },
          {
            "name": "HasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "PublishedAtFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "PublishedAtTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[DigestListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Digests"
        ],
        "summary": "Create a new digest",
        "operationId": "CreateDigest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateDigestDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DigestDto"
            }
          }
        }
      }
    },
    "/api/web/digests/{id}": {
      "put": {
        "tags": [
          "Digests"
        ],
        "summary": "Edit a digest",
        "operationId": "EditDigest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditDigestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DigestDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Digests"
        ],
        "summary": "Delete a digest by id",
        "operationId": "DeleteDigest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/digests/status/{id}": {
      "put": {
        "tags": [
          "Digests"
        ],
        "summary": "Edit digest status",
        "operationId": "EditDigestStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "digestStatusDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditDigestStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DigestDto"
            }
          }
        }
      }
    },
    "/api/web/digests/autocomplete": {
      "get": {
        "tags": [
          "Digests"
        ],
        "operationId": "GetDigestsAutocompleteList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DigestsAutocompleteListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/digests/list": {
      "post": {
        "tags": [
          "Digests"
        ],
        "summary": "Get list of digests by their Ids.",
        "operationId": "GetDigestListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DigestIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DigestMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/digests/digestread/list": {
      "post": {
        "tags": [
          "Digests"
        ],
        "summary": "Get list of digests reads by their Ids.",
        "operationId": "GetDigestReadMarksListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DigestReadMarksIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DigestReadMarkMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/documents": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get documents",
        "operationId": "GetDocuments",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Title",
              "DocumentCategory",
              "EntityType",
              "DateStart",
              "NoteCount",
              "UpdatedAt"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "DocumentCategoryId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "EntityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Meeting",
              "Flight",
              "Conference"
            ]
          },
          {
            "name": "DateStartFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateStartTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "UpdatedAtFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "UpdatedAtTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "HasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[DocumentListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Create document",
        "operationId": "CreateDocument",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateDocumentDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentOutputDto"
            }
          }
        }
      }
    },
    "/api/web/documents/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get document",
        "operationId": "GetDocument",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentOutputDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Edit document",
        "operationId": "EditDocument",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditDocumentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentOutputDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete document",
        "operationId": "DeleteDocument",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/documents/autocomplete": {
      "get": {
        "tags": [
          "Documents"
        ],
        "operationId": "GetDocumentsAutocompleteList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentsAutocompleteListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/documents/{documentId}/upload": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Upload document file",
        "operationId": "CreateDocumentUpload",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/documents/{documentId}/upload": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Upload document file",
        "operationId": "CreateDocumentUpload",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/documents/{documentId}/download": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download document file",
        "operationId": "DownloadDocument",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rqId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileStreamResult"
            }
          }
        }
      }
    },
    "/api/mobile/documents/{documentId}/download": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Download document file",
        "operationId": "DownloadDocument",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rqId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FileStreamResult"
            }
          }
        }
      }
    },
    "/api/web/documents/categories": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get categories",
        "operationId": "GetCategoriesList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UpdatedAt",
              "Name",
              "Author"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[DocumentCategoryListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Create category",
        "operationId": "CreateDocumentCategory",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateDocumentCategoryDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentCategoryDto"
            }
          }
        }
      }
    },
    "/api/web/documents/categories/autocomplete": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get categories autocomplete",
        "operationId": "GetCategoriesAutocompleteList",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/documents/categories/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get category",
        "operationId": "GetDocumentCategory",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentCategoryDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Edit category",
        "operationId": "EditDocumentCategory",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditDocumentCategoryDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentCategoryDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Delete category",
        "operationId": "DeleteDocumentCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/documents/categories/list": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Get list of document categories by their Ids.",
        "operationId": "GetDocumentCategoriesListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentCategoryIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentCategoryMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/documents/list": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Get list of documents by their Ids.",
        "operationId": "GetDocumentsListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DocumentIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events",
        "operationId": "GetEvents",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateTo",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "DateStart",
              "DateEnd",
              "EventType",
              "EventStatus",
              "ParticipantStatus",
              "NoteCount"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "DateStartFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateStartTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateEndFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DateEndTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "EventStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "Directed",
              "Canceled",
              "Completed"
            ]
          },
          {
            "name": "EventType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MeetingExternal",
              "MeetingInternal",
              "MeetingPrivate",
              "Flight"
            ]
          },
          {
            "name": "ParticipantStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Pending",
              "Declined",
              "Confirmed"
            ]
          },
          {
            "name": "HasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[EventItemDto]"
            }
          }
        }
      }
    },
    "/api/web/events/autocomplete": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events autocomplete",
        "operationId": "GetEventsAutocomplete",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Meeting",
              "Flight",
              "Conference"
            ]
          },
          {
            "name": "Search",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventAutocompleteDto"
              }
            }
          }
        }
      }
    },
    "/api/web/events/participantstatus/{id}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Edit event participant status",
        "operationId": "EditParticipantStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditParticipantStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/events/status/{id}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Edit event status",
        "operationId": "EditEventStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditEventStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/events/meetings/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get meeting",
        "operationId": "GetMeeting",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeetingDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Edit meeting",
        "operationId": "EditMeeting",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditMeetingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeetingDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete meeting",
        "operationId": "DeleteMeeting",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/events/meetings": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create meeting",
        "operationId": "CreateMeeting",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateMeetingDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeetingDto"
            }
          }
        }
      }
    },
    "/api/web/events/meetings/{id}/status": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Edit meeting status",
        "operationId": "EditMeetingStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditEventStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeetingDto"
            }
          }
        }
      }
    },
    "/api/web/events/flights/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get flight",
        "operationId": "GetFlight",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlightDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Edit flight",
        "operationId": "EditFlight",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditFlightDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlightDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete flight",
        "operationId": "DeleteFlight",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/events/flights": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create flight",
        "operationId": "CreateFlight",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFlightDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlightDto"
            }
          }
        }
      }
    },
    "/api/web/events/flights/{id}/status": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Edit flight status",
        "operationId": "EditFlightStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditEventStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlightDto"
            }
          }
        }
      }
    },
    "/api/mobile/events/flights/list": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Get flights list by their IDs for mobile client",
        "operationId": "GetFlightListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/FlightMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/events/flightToParticipant/list": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Get flight participants list by their IDs for mobile client",
        "operationId": "GetFlightParticipantListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventParticipantListFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/FlightParticipantMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/events/meetings/list": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Get list of meetings by their IDs for mobile client",
        "operationId": "GetMeetingsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeetingMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/events/meetingToParticipant/list": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Get meeting participants list by their IDs for mobile client",
        "operationId": "GetMeetingParticipantListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventParticipantListFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeetingParticipantMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/news/media/{mediaId}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media by Id",
        "operationId": "GetMedia",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediaDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Media"
        ],
        "summary": "Edit media",
        "operationId": "EditMedia",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "mediaDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditMediaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediaDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Media"
        ],
        "summary": "Delete media by Id",
        "operationId": "DeleteMedia",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/news/media": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media list by filter",
        "operationId": "GetMediaList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CreatedAt",
              "Title",
              "Author",
              "Status"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[MediaListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Create media",
        "operationId": "CreateMedia",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "mediaDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateMediaDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateMediaDto"
            }
          }
        }
      }
    },
    "/api/web/news/media/status/{id}": {
      "put": {
        "tags": [
          "Media"
        ],
        "summary": "Edit media status",
        "operationId": "EditMediaStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "mediaStatusDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditMediaStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediaDto"
            }
          }
        }
      }
    },
    "/api/mobile/news/media/list": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Get list of media by their Ids.",
        "operationId": "GetMediaListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MediaIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MediaMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/news/{newsId}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news by Id",
        "operationId": "GetNews",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "newsId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NewsDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete news by Id",
        "operationId": "DeleteNews",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "newsId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/news": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news list",
        "operationId": "GetNewsList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Month",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PublishedAt",
              "CompanyName",
              "TypeName",
              "SourceName",
              "NoteCount",
              "Author",
              "Status"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Draft",
              "Published"
            ]
          },
          {
            "name": "CompanyId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "TypeId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "HasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "PublishedAtFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "PublishedAtTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[NewsListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create news",
        "operationId": "CreateNews",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "newsDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateNewsDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NewsDto"
            }
          }
        }
      }
    },
    "/api/web/news/{id}": {
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Edit news",
        "operationId": "EditNews",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "newsDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditNewsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/news/status/{id}": {
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Edit news status",
        "operationId": "EditNewsStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "newsStatusDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditNewsStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NewsDto"
            }
          }
        }
      }
    },
    "/api/web/news/autocomplete": {
      "get": {
        "tags": [
          "News"
        ],
        "operationId": "GetNewsAutocompleteList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewsAutocompleteListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/news/types/autocomplete": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "autocomplete news type during creating news",
        "operationId": "Autocomplete",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewsTypeDto"
              }
            }
          }
        }
      }
    },
    "/api/web/news/types/{typeId}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get a news type by Id",
        "operationId": "GetNewsType",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetNewsTypeDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a newsType by id",
        "operationId": "DeleteNewsType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/news/types": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get a  news type list by filter",
        "operationId": "GetNewsTypeList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UpdatedAt",
              "Author",
              "Name"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[NewsTypeItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create new NewsType",
        "operationId": "CreateNewsType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "newsTypeDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateNewsTypeDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetNewsTypeDto"
            }
          }
        }
      }
    },
    "/api/web/news/types/{id}": {
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Edit a newsType",
        "operationId": "EditNewsType",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "newsTypeDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditNewsTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetNewsTypeDto"
            }
          }
        }
      }
    },
    "/api/web/news/loaderconfig": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get news loading settings",
        "operationId": "GetNewsLoadingSettings",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NewsLoadingSettingsDto"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create news loading settings",
        "operationId": "CreateNewsLoadingSettings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateNewsLoadingSettingsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NewsLoadingSettingsDto"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/web/news/inboxjournal": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get digest inbox journal",
        "operationId": "GetDigestInboxList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UpdatedAt",
              "MessageSubject",
              "MessageFrom",
              "MessageType",
              "Status",
              "IsProcessed",
              "IsFailed",
              "IsDeleted"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[InboxJournalEntryDto]"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/mobile/news/list": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Get list of news by their Ids.",
        "operationId": "GetNewsListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NewsIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewsMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/news/newsread/list": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Get list of news reads by their Ids.",
        "operationId": "GetNewsReadMarksListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NewsReadMarksIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewsReadMarkMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get all available notes with filter",
        "operationId": "GetListByFilter",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "EntityType",
              "UpdatedAt"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "EntityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Flight",
              "Contact",
              "Meeting",
              "Conference",
              "Document",
              "MediaNews",
              "Digest",
              "WithoutLink"
            ]
          },
          {
            "name": "UpdatedAtFrom",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "UpdatedAtTo",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[NoteListItemDto]"
            }
          }
        }
      }
    },
    "/api/web/notes/{id}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get a note by Id",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoteOutputDto"
            }
          }
        }
      }
    },
    "/api/mobile/notes/list": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Get list of notes by their Ids.",
        "operationId": "GetNotesListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NoteIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/NoteMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notification for web by accountId",
        "operationId": "GetWebNotifications",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[NotificationWebDto]"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Mark single notification as red by accountId",
        "operationId": "Read",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "notificationId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/notifications/allReaded": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Mark all notifications as red by accountId",
        "operationId": "ReadAll",
        "consumes": [],
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/notifications/externalAccounts": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get all external notification accounts.",
        "operationId": "GetList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalNotificationAccountListItemDto"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Create new external notification account.",
        "operationId": "Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "createAccountDto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateExternalNotificationAccountDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalNotificationAccountOutputDto"
            }
          }
        }
      }
    },
    "/api/web/notifications/externalAccounts/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get external notification account by id.",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "External notification account id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalNotificationAccountOutputDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Delete external notification account.",
        "operationId": "Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/notifications/list": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notification for mobile by accountId",
        "operationId": "GetMobileNotification",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "criteria",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationMobileDto"
            }
          }
        }
      }
    },
    "/api/mobile/performers/list": {
      "post": {
        "tags": [
          "Performers"
        ],
        "summary": "Get list of performers by their Ids.",
        "operationId": "GetPerformerListMobile",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PerformerListFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerformerMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Role by id.",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleOutputDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Edit Role",
        "operationId": "Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "dto with name, type and permissions",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleOutputDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete Role",
        "operationId": "Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get list of roles.",
        "operationId": "GetRoleList",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleOutputDto"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new Role",
        "operationId": "Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "dto with name, type and permissions",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleInputDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleOutputDto"
            }
          }
        }
      }
    },
    "/api/web/roles/permissions": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get permissions by role type.",
        "operationId": "GetPermissionsByRoleType",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "roleType",
            "in": "query",
            "description": "Role type.",
            "required": false,
            "type": "string",
            "enum": [
              "UserAdministrator",
              "SystemAdministrator",
              "Chief",
              "Assistant",
              "MediaAssistant"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PermissionListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/syncdata/errors": {
      "get": {
        "tags": [
          "SyncData"
        ],
        "summary": "Get errors in past synchronizations",
        "operationId": "GetSyncDataErrors",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "UserLogin",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "CorrelationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[SyncDataReportDto]"
            }
          }
        }
      }
    },
    "/api/mobile/syncdata/weather": {
      "get": {
        "tags": [
          "SyncData"
        ],
        "summary": "Get current and +9 hours temperature from open weather service",
        "operationId": "GetWeatherAsync",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WeatherDto"
            }
          }
        }
      }
    },
    "/api/mobile/syncdata/weather/forecast": {
      "get": {
        "tags": [
          "SyncData"
        ],
        "summary": "Get seven day weather forecast plus today max and min temp",
        "operationId": "GetWeatherForecastAsync",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WeatherForecastDto"
            }
          }
        }
      }
    },
    "/api/mobile/syncdata": {
      "post": {
        "tags": [
          "SyncData"
        ],
        "summary": "Synchronize data between server and mobile app",
        "operationId": "Sync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "syncDataDto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SyncDataInputDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SyncDataOutputListDto"
            }
          }
        }
      }
    },
    "/api/web/system/app-version": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get current mobile app version",
        "operationId": "GetAppVersion",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppVersionDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "System"
        ],
        "summary": "Edit current mobile app version",
        "operationId": "UpdateAppVersion",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateAppVersionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppVersionDto"
            }
          }
        }
      }
    },
    "/api/mobile/system/app-version": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get current mobile app version",
        "operationId": "GetAppVersion",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppVersionDto"
            }
          }
        }
      }
    },
    "/api/web/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User by id.",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserOutputDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit user",
        "operationId": "Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditUserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserOutputDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "operationId": "Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get filtered list of Users.",
        "operationId": "GetUsers",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Login",
              "FullName",
              "Position",
              "Status",
              "Role"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Active",
              "Blocked"
            ]
          },
          {
            "name": "RoleId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[UserListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "operationId": "Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "dto with full name, position and e-mail",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateUserDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserOutputDto"
            }
          }
        }
      }
    },
    "/api/web/users/validate": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Check if user exists and is deleted",
        "operationId": "Validate",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "ApplicationUser's email",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserAdBasicInfoDto"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/UserOutputDto"
            }
          },
          "410": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/UserOutputDto"
            }
          }
        }
      }
    },
    "/api/web/users/{id}/restore": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Restore deleted user",
        "operationId": "RestoreDeletedUser",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserOutputDto"
            }
          }
        }
      }
    },
    "/api/web/users/{id}/status": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Lock/unlock user's account",
        "operationId": "EditLockStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "Dto with status to be set",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditUserStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/users/chiefs": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all chief users in the system",
        "operationId": "GetChiefs",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserInfoDto"
              }
            }
          }
        }
      }
    },
    "/api/web/users/assists": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all assistants of current chief",
        "operationId": "GetAssistants",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserInfoDto"
              }
            }
          }
        }
      }
    },
    "/api/web/users/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all user roles",
        "operationId": "GetRoles",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserRoleListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/web/users/settings": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user chief",
        "operationId": "GetCurrentUserChief",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserListItemDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit user settings",
        "operationId": "EditUserSettings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "setting",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditUserSettingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserSettingsDto"
            }
          }
        }
      }
    },
    "/api/web/users/settings/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user settings",
        "operationId": "GetUserSettings",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserSettingsDto"
            }
          }
        }
      }
    },
    "/api/web/users/settings/mobile/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get mobile settings",
        "operationId": "GetUserMobileSettings",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserMobileSettings"
            }
          }
        }
      }
    },
    "/api/mobile/users/settings/mobile/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get mobile settings",
        "operationId": "GetUserMobileSettings",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserMobileSettings"
            }
          }
        }
      }
    },
    "/api/web/users/devices": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get filtered list of Devices",
        "operationId": "GetDevices",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Login",
              "DeviceId",
              "UpdatedAt",
              "DeviceModel",
              "IosVersion",
              "AppVersion"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[DeviceOutputDto]"
            }
          }
        }
      }
    },
    "/api/web/users/devices/{deviceId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Blocked/unblocked user's device",
        "operationId": "EditDeviceBlockedStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "External Device Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dto",
            "in": "body",
            "description": "Dto with status to be set",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditDeviceBlockStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/web/users/trustedSender": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get trusted senders list of emails",
        "operationId": "GetTrustedSenders",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "SortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UpdatedAt",
              "Email"
            ]
          },
          {
            "name": "SortDesc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "LimitFrom",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LimitSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Page[TrustedSenderOutputListItemDto]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create trusted sender email",
        "operationId": "CreateTrustedSender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateTrustedSenderDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrustedSenderOutputDto"
            }
          }
        }
      }
    },
    "/api/web/users/trustedSender/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get trusted sender by its id",
        "operationId": "GetTrustedSender",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrustedSenderOutputDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit trusted sender email",
        "operationId": "EditTrustedSender",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditTrustedSenderDto"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrustedSenderOutputDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete trusted sender email",
        "operationId": "DeleteTrustedSender",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/web/users/trustedSender/autocomplete": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Search trusted senders by email",
        "operationId": "TrustedSenderAutocomplete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/mobile/users/list": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of users by their Ids",
        "operationId": "GetMobileList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserOutputDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/users/devices/token": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "EditDeviceToken",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dto",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EditDeviceTokenDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/mobile/widgets/list": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "operationId": "GetWidgetsMobileList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WidgetMobileListItemDto"
              }
            }
          }
        }
      }
    },
    "/api/mobile/widgets/settings/list": {
      "post": {
        "tags": [
          "Widgets"
        ],
        "operationId": "GetWidgetSettingsMobileList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WidgetSettingsIdFilterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WidgetSettingsMobileListItemDto"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Page[AirportInfoDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AirportInfoDto"
          },
          "readOnly": true
        }
      }
    },
    "AirportInfoDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CreateAirportDto": {
      "required": [
        "code",
        "name",
        "city",
        "country"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "nameEn": {
          "type": "string"
        },
        "cityEn": {
          "type": "string"
        },
        "countryEn": {
          "type": "string"
        }
      }
    },
    "AirportDto": {
      "type": "object",
      "properties": {
        "nameEn": {
          "type": "string"
        },
        "cityEn": {
          "type": "string"
        },
        "countryEn": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "UserInfoDto": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditAirportDto": {
      "required": [
        "code",
        "name",
        "city",
        "country"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "nameEn": {
          "type": "string"
        },
        "cityEn": {
          "type": "string"
        },
        "countryEn": {
          "type": "string"
        }
      }
    },
    "AirportIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AirportMobileListItemDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "nameEn": {
          "type": "string"
        },
        "cityEn": {
          "type": "string"
        },
        "countryEn": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "AssignmentPerformerSearchResultDto": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "userId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "Page[AssignmentListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "AssignmentListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "confirmDate": {
          "format": "date-time",
          "type": "string"
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "isExpired": {
          "type": "boolean"
        },
        "entityType": {
          "enum": [
            "Flight",
            "Meeting",
            "Conference",
            "Contact",
            "News",
            "Digest",
            "Document"
          ],
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "priority": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Critical"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent",
            "Working",
            "Completed",
            "Cancelled"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CreateAssignmentDto": {
      "required": [
        "isPersonal",
        "priority",
        "status"
      ],
      "type": "object",
      "properties": {
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "factFinishDate": {
          "format": "date-time",
          "type": "string"
        },
        "confirmDate": {
          "format": "date-time",
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "entityType": {
          "enum": [
            "Flight",
            "Meeting",
            "Conference",
            "Contact",
            "News",
            "Digest",
            "Document"
          ],
          "type": "string"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "priority": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Critical"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent",
            "Working",
            "Completed",
            "Cancelled"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "performers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentPerformerDto"
          }
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "AssignmentPerformerDto": {
      "required": [
        "email",
        "firstName",
        "lastName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        }
      }
    },
    "AssignmentOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "factFinishDate": {
          "format": "date-time",
          "type": "string"
        },
        "confirmDate": {
          "format": "date-time",
          "type": "string"
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "isExpired": {
          "type": "boolean"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "entityType": {
          "enum": [
            "Flight",
            "Meeting",
            "Conference",
            "Contact",
            "News",
            "Digest",
            "Document"
          ],
          "type": "string"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "entityTitle": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "priority": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Critical"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent",
            "Working",
            "Completed",
            "Cancelled"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "performers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentPerformerOutputDto"
          }
        },
        "comments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentCommentOutputDto"
          }
        },
        "emailSentProcessing": {
          "$ref": "#/definitions/AssignmentOutputEmailSentProcessingDto"
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "AssignmentPerformerOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        }
      }
    },
    "AssignmentCommentOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "assignmentId": {
          "format": "uuid",
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent"
          ],
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedAssignmentCommentDocumentOutputDto"
          }
        }
      }
    },
    "AssignmentOutputEmailSentProcessingDto": {
      "type": "object",
      "properties": {
        "hasError": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "RelatedAssignmentCommentDocumentOutputDto": {
      "type": "object",
      "properties": {
        "isPrivate": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "categoryId": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditAssignmentDto": {
      "required": [
        "isPersonal",
        "priority",
        "status"
      ],
      "type": "object",
      "properties": {
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "factFinishDate": {
          "format": "date-time",
          "type": "string"
        },
        "confirmDate": {
          "format": "date-time",
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "entityType": {
          "enum": [
            "Flight",
            "Meeting",
            "Conference",
            "Contact",
            "News",
            "Digest",
            "Document"
          ],
          "type": "string"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "performers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentPerformerDto"
          }
        },
        "priority": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Critical"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent",
            "Working",
            "Completed",
            "Cancelled"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "EditAssignmentStatusDto": {
      "required": [
        "assignmentStatus"
      ],
      "type": "object",
      "properties": {
        "assignmentStatus": {
          "enum": [
            "Draft",
            "EmailSent",
            "Working",
            "Completed",
            "Cancelled"
          ],
          "type": "string"
        }
      }
    },
    "AssignmentListFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssignmentMobileListItemDto": {
      "type": "object",
      "properties": {
        "conferenceId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "meetingId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "flightId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "newsId": {
          "$ref": "#/definitions/NewsRefDto"
        },
        "digestId": {
          "$ref": "#/definitions/DigestRefDto"
        },
        "documentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent",
            "Working",
            "Completed",
            "Cancelled"
          ],
          "type": "string"
        },
        "priority": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Critical"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "factFinishDate": {
          "format": "date-time",
          "type": "string"
        },
        "confirmDate": {
          "format": "date-time",
          "type": "string"
        },
        "assignmentToPerformer": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentToPerformerRefDto"
          }
        },
        "authorId": {
          "$ref": "#/definitions/UserRefDto"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isExpired": {
          "type": "boolean"
        },
        "emailSentProcessing": {
          "$ref": "#/definitions/AssignmentOutputEmailSentProcessingDto"
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "EventRefDto": {
      "description": "Event reference",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ContactRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "NewsRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DigestRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DocumentRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssignmentToPerformerRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "UserRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssignmentToPerformerListFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssignmentToPerformerMobileListItemDto": {
      "type": "object",
      "properties": {
        "assignmentId": {
          "$ref": "#/definitions/AssignmentRefDto"
        },
        "performerId": {
          "$ref": "#/definitions/AssignmentToPerformerRefDto"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "finishDate": {
          "format": "date-time",
          "type": "string"
        },
        "isReady": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "AssignmentRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditAssignmentCommentDto": {
      "required": [
        "text"
      ],
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent"
          ],
          "type": "string"
        },
        "documentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        }
      }
    },
    "CreateAssignmentCommentDto": {
      "required": [
        "assignmentId",
        "text"
      ],
      "type": "object",
      "properties": {
        "assignmentId": {
          "format": "uuid",
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent"
          ],
          "type": "string"
        },
        "documentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "AssignmentCommentIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssignmentCommentMobileListItemDto": {
      "type": "object",
      "properties": {
        "assignmentId": {
          "$ref": "#/definitions/AssignmentRefDto"
        },
        "text": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent"
          ],
          "type": "string"
        },
        "authorId": {
          "format": "uuid",
          "type": "string"
        },
        "documentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "UserLoginDto": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "DeviceDto": {
      "type": "object",
      "properties": {
        "deviceId": {
          "format": "uuid",
          "type": "string"
        },
        "deviceModel": {
          "type": "string"
        },
        "deviceToken": {
          "type": "string"
        }
      }
    },
    "DeviceResponseDto": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserInfoResponseDto"
        },
        "token": {
          "type": "string"
        },
        "assignmentNumberPrefix": {
          "format": "int32",
          "type": "integer"
        },
        "lastAssignmentOrdinalNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserInfoResponseDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "CreateBackgroundDto": {
      "required": [
        "documentId"
      ],
      "type": "object",
      "properties": {
        "documentId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "BackgroundDto": {
      "type": "object",
      "properties": {
        "pictureId": {
          "format": "uuid",
          "type": "string"
        },
        "thumbnailId": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer"
        },
        "updatedAt": {
          "type": "integer"
        }
      }
    },
    "Page[BackgroundDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackgroundDto"
          },
          "readOnly": true
        }
      }
    },
    "BiographyOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "spouse": {
          "$ref": "#/definitions/SpouseOutputDto"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "firstNameNative": {
          "type": "string"
        },
        "lastNameNative": {
          "type": "string"
        },
        "firstNameEng": {
          "type": "string"
        },
        "lastNameEng": {
          "type": "string"
        },
        "appeal": {
          "$ref": "#/definitions/AppealDto"
        },
        "birthDay": {
          "format": "int32",
          "type": "integer"
        },
        "birthMonth": {
          "format": "int32",
          "type": "integer"
        },
        "birthYear": {
          "format": "int32",
          "type": "integer"
        },
        "birthPlace": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "maritalStatus": {
          "type": "string"
        },
        "relationToStructure": {
          "type": "string"
        },
        "relationToStructureForeign": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "previousEmployment": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "carModel": {
          "type": "string"
        },
        "carNumber": {
          "type": "string"
        },
        "hasChildren": {
          "type": "boolean"
        },
        "workplaceAddress": {
          "type": "string"
        },
        "workplaceAddressComment": {
          "type": "string"
        },
        "isForeign": {
          "type": "boolean"
        },
        "workplaces": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkplaceOutputDto"
          }
        },
        "educations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EducationOutputDto"
          }
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SpouseOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "firstNameNative": {
          "type": "string"
        },
        "lastNameNative": {
          "type": "string"
        },
        "firstNameEng": {
          "type": "string"
        },
        "lastNameEng": {
          "type": "string"
        },
        "appeal": {
          "$ref": "#/definitions/AppealDto"
        },
        "birthDay": {
          "format": "int32",
          "type": "integer"
        },
        "birthMonth": {
          "format": "int32",
          "type": "integer"
        },
        "birthYear": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AppealDto": {
      "type": "object",
      "properties": {
        "officialAppeal": {
          "type": "string"
        },
        "privateAppeal": {
          "type": "string"
        },
        "officialAppealNative": {
          "type": "string"
        },
        "privateAppealNative": {
          "type": "string"
        },
        "officialAppealEng": {
          "type": "string"
        },
        "privateAppealEng": {
          "type": "string"
        }
      }
    },
    "WorkplaceOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "appointment": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "isCurrent": {
          "type": "boolean"
        },
        "isPrimary": {
          "type": "boolean"
        }
      }
    },
    "EducationOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "placeName": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BiographyAutocompliteOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "workplace": {
          "$ref": "#/definitions/WorkplaceOutputDto"
        }
      }
    },
    "BiographyItemIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "BiographyMobileListItemDto": {
      "type": "object",
      "properties": {
        "birthDay": {
          "format": "int32",
          "type": "integer"
        },
        "birthMonth": {
          "format": "int32",
          "type": "integer"
        },
        "birthYear": {
          "format": "int32",
          "type": "integer"
        },
        "birthPlace": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "maritalStatus": {
          "type": "string"
        },
        "officialAppeal": {
          "type": "string"
        },
        "privateAppeal": {
          "type": "string"
        },
        "firstNameEng": {
          "type": "string"
        },
        "lastNameEng": {
          "type": "string"
        },
        "relationToStructure": {
          "type": "string"
        },
        "relationToStructureForeign": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "previousEmployment": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "firstNameNative": {
          "type": "string"
        },
        "lastNameNative": {
          "type": "string"
        },
        "officialAppealNative": {
          "type": "string"
        },
        "privateAppealNative": {
          "type": "string"
        },
        "officialAppealEng": {
          "type": "string"
        },
        "privateAppealEng": {
          "type": "string"
        },
        "carModel": {
          "type": "string"
        },
        "carNumber": {
          "type": "string"
        },
        "hasChildren": {
          "type": "boolean"
        },
        "workplaceAddress": {
          "type": "string"
        },
        "workplaceAddressComment": {
          "type": "string"
        },
        "isForeign": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "WorkplaceMobileListItemDto": {
      "type": "object",
      "properties": {
        "appointment": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "biographyId": {
          "$ref": "#/definitions/BiographyRefDto"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "isCurrent": {
          "type": "boolean"
        },
        "isPrimary": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "BiographyRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EducationMobileListItemDto": {
      "type": "object",
      "properties": {
        "placeName": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "biographyId": {
          "$ref": "#/definitions/BiographyRefDto"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "SpouseMobileListItemDto": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "firstNameNative": {
          "type": "string"
        },
        "lastNameNative": {
          "type": "string"
        },
        "firstNameEng": {
          "type": "string"
        },
        "lastNameEng": {
          "type": "string"
        },
        "officialAppeal": {
          "type": "string"
        },
        "privateAppeal": {
          "type": "string"
        },
        "officialAppealNative": {
          "type": "string"
        },
        "privateAppealNative": {
          "type": "string"
        },
        "officialAppealEng": {
          "type": "string"
        },
        "privateAppealEng": {
          "type": "string"
        },
        "birthDay": {
          "format": "int32",
          "type": "integer"
        },
        "birthMonth": {
          "format": "int32",
          "type": "integer"
        },
        "birthYear": {
          "format": "int32",
          "type": "integer"
        },
        "biographyId": {
          "$ref": "#/definitions/BiographyRefDto"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "Page[CompanyDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyDto"
          },
          "readOnly": true
        }
      }
    },
    "CompanyDto": {
      "type": "object",
      "properties": {
        "photoDocumentId": {
          "format": "uuid",
          "description": "Logo document",
          "type": "string"
        },
        "websiteLink": {
          "description": "Web site link",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Created at time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Updated at time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto",
          "description": "Created by user"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto",
          "description": "Updated by user"
        },
        "id": {
          "format": "uuid",
          "description": "Company id",
          "type": "string"
        },
        "nameFull": {
          "description": "Full company name",
          "type": "string"
        }
      }
    },
    "CreateCompanyDto": {
      "description": "Create company",
      "required": [
        "nameFull"
      ],
      "type": "object",
      "properties": {
        "nameFull": {
          "description": "Full company name",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "description": "Logo document",
          "type": "string"
        },
        "websiteLink": {
          "description": "Web site link",
          "type": "string"
        }
      }
    },
    "CompanyInfoDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Company id",
          "type": "string"
        },
        "nameFull": {
          "description": "Full company name",
          "type": "string"
        }
      }
    },
    "EditCompanyDto": {
      "required": [
        "nameFull"
      ],
      "type": "object",
      "properties": {
        "nameFull": {
          "description": "Full company name",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "description": "Logo document",
          "type": "string"
        },
        "websiteLink": {
          "description": "Web site link",
          "type": "string"
        }
      }
    },
    "CompanyIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CompanyMobileListItemDto": {
      "type": "object",
      "properties": {
        "nameFull": {
          "type": "string"
        },
        "websiteLink": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "Page[ConferenceListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConferenceListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "ConferenceListItemDto": {
      "type": "object",
      "properties": {
        "dateStart": {
          "type": "integer"
        },
        "dateEnd": {
          "type": "integer"
        },
        "gmt": {
          "format": "int32",
          "type": "integer"
        },
        "eventCount": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationOutputDto"
        },
        "eventStatus": {
          "enum": [
            "Draft",
            "Directed",
            "Canceled",
            "Completed"
          ],
          "type": "string"
        },
        "noteCount": {
          "format": "int32",
          "type": "integer"
        },
        "assignmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "LocationOutputDto": {
      "description": "Meeting location",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "longitude": {
          "format": "float",
          "description": "Longitude",
          "type": "number"
        },
        "latitude": {
          "format": "float",
          "description": "Latitude",
          "type": "number"
        },
        "locationComment": {
          "description": "Location comment",
          "type": "string"
        }
      }
    },
    "CreateConferenceDto": {
      "description": "Create conference",
      "required": [
        "title",
        "location",
        "dateStart",
        "dateEnd",
        "gmt",
        "isChecked",
        "documents"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "Conference title",
          "type": "string"
        },
        "description": {
          "description": "Conference description with formatting",
          "type": "string"
        },
        "shortDescription": {
          "description": "Conference description without formatting",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "description": "Document with picture",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationInputDto",
          "description": "Conference location"
        },
        "dateStart": {
          "format": "date-time",
          "description": "Conference start date",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "description": "Conference end date",
          "type": "string"
        },
        "gmt": {
          "format": "int32",
          "description": "Greenwich Mean Time offset",
          "type": "integer"
        },
        "isChecked": {
          "description": "Check date period conflict",
          "type": "boolean"
        },
        "documents": {
          "description": "Documents, attached to the conference",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventDocumentDto"
          }
        }
      }
    },
    "LocationInputDto": {
      "description": "Meeting location",
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "type": "string"
        },
        "longitude": {
          "format": "float",
          "description": "Longitude",
          "type": "number"
        },
        "latitude": {
          "format": "float",
          "description": "Latitude",
          "type": "number"
        },
        "locationComment": {
          "description": "Location comment",
          "type": "string"
        }
      }
    },
    "EventDocumentDto": {
      "required": [
        "isPrivate"
      ],
      "type": "object",
      "properties": {
        "isPrivate": {
          "type": "boolean"
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ConferenceDto": {
      "type": "object",
      "properties": {
        "dateStart": {
          "type": "integer"
        },
        "dateEnd": {
          "type": "integer"
        },
        "gmt": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationOutputDto"
        },
        "eventType": {
          "type": "string",
          "readOnly": true
        },
        "status": {
          "enum": [
            "Draft",
            "Directed",
            "Canceled",
            "Completed"
          ],
          "type": "string"
        },
        "organizerId": {
          "format": "uuid",
          "type": "string"
        },
        "isEditable": {
          "type": "boolean"
        },
        "meetings": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventInConferenceDto"
          }
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "notes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedNoteOutputDto"
          }
        },
        "assignments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentOutputDto"
          }
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEventDocumentOutputDto"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EventInConferenceDto": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate",
            "Flight"
          ],
          "type": "string"
        },
        "dateStart": {
          "type": "integer"
        },
        "sourceGmt": {
          "format": "int32",
          "type": "integer"
        },
        "dateEnd": {
          "type": "integer"
        },
        "destinationGmt": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "RelatedNoteOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "RelatedEventDocumentOutputDto": {
      "type": "object",
      "properties": {
        "isPrivate": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "categoryId": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ConferenceAutocompleteDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "EditConferenceDto": {
      "description": "Edit conference",
      "required": [
        "title",
        "location",
        "dateStart",
        "dateEnd",
        "gmt",
        "isChecked",
        "documents"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "Conference title",
          "type": "string"
        },
        "description": {
          "description": "Conference description with formatting",
          "type": "string"
        },
        "shortDescription": {
          "description": "Conference description without formatting",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "description": "Document with picture",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationInputDto",
          "description": "Conference location"
        },
        "dateStart": {
          "format": "date-time",
          "description": "Conference start date",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "description": "Conference end date",
          "type": "string"
        },
        "gmt": {
          "format": "int32",
          "description": "Greenwich Mean Time offset",
          "type": "integer"
        },
        "isChecked": {
          "description": "Check date period conflict",
          "type": "boolean"
        },
        "documents": {
          "description": "Documents, attached to the conference",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventDocumentDto"
          }
        }
      }
    },
    "EditEventStatusDto": {
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Draft",
            "Directed",
            "Canceled",
            "Completed"
          ],
          "type": "string"
        }
      }
    },
    "EventIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ConferenceMobileListItemDto": {
      "type": "object",
      "properties": {
        "dateStart": {
          "format": "date-time",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "type": "string"
        },
        "gmt": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "locationAddress": {
          "type": "string"
        },
        "locationLongitude": {
          "format": "float",
          "type": "number"
        },
        "locationLatitude": {
          "format": "float",
          "type": "number"
        },
        "locationComment": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "Page[ContactListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "ContactListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "job": {
          "type": "string"
        },
        "noteCount": {
          "format": "int32",
          "type": "integer"
        },
        "assignmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "birthDay": {
          "format": "int32",
          "type": "integer"
        },
        "birthMonth": {
          "format": "int32",
          "type": "integer"
        },
        "birthYear": {
          "format": "int32",
          "type": "integer"
        },
        "relationToStructure": {
          "type": "string"
        },
        "toWishHappyBirthday": {
          "type": "boolean"
        }
      }
    },
    "CreateContactDto": {
      "required": [
        "isShownInContacts"
      ],
      "type": "object",
      "properties": {
        "biography": {
          "$ref": "#/definitions/BiographyInputDto"
        },
        "congratulation": {
          "$ref": "#/definitions/ContactCongratulationDto"
        },
        "additionalContacts": {
          "type": "string"
        },
        "verifyEmail": {
          "type": "string"
        },
        "communityMembership": {
          "type": "string"
        },
        "meetingHistory": {
          "type": "string"
        },
        "isShownInContacts": {
          "type": "boolean"
        },
        "emails": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactEmailInputDto"
          }
        },
        "phones": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPhoneInputDto"
          }
        },
        "messengers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessengerInputDto"
          }
        },
        "webLinks": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebLinkInputDto"
          }
        }
      }
    },
    "BiographyInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "spouse": {
          "$ref": "#/definitions/SpouseInputDto"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "firstNameNative": {
          "type": "string"
        },
        "lastNameNative": {
          "type": "string"
        },
        "firstNameEng": {
          "type": "string"
        },
        "lastNameEng": {
          "type": "string"
        },
        "appeal": {
          "$ref": "#/definitions/AppealDto"
        },
        "birthDay": {
          "format": "int32",
          "type": "integer"
        },
        "birthMonth": {
          "format": "int32",
          "type": "integer"
        },
        "birthYear": {
          "format": "int32",
          "type": "integer"
        },
        "birthPlace": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "maritalStatus": {
          "type": "string"
        },
        "relationToStructure": {
          "type": "string"
        },
        "relationToStructureForeign": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "previousEmployment": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "carModel": {
          "type": "string"
        },
        "carNumber": {
          "type": "string"
        },
        "hasChildren": {
          "type": "boolean"
        },
        "workplaceAddress": {
          "type": "string"
        },
        "workplaceAddressComment": {
          "type": "string"
        },
        "isForeign": {
          "type": "boolean"
        },
        "workplaces": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkplaceInputDto"
          }
        },
        "educations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EducationInputDto"
          }
        }
      }
    },
    "ContactCongratulationDto": {
      "type": "object",
      "properties": {
        "toWishHappyBirthday": {
          "type": "boolean"
        },
        "happyBirthdayText": {
          "type": "string"
        },
        "congratulationEmail": {
          "type": "string"
        },
        "congratulationEmailText": {
          "type": "string"
        },
        "congratulationTitle": {
          "type": "string"
        },
        "congratulationCategory": {
          "type": "string"
        },
        "newYearText": {
          "type": "string"
        },
        "february23Text": {
          "type": "string"
        },
        "march8Text": {
          "type": "string"
        },
        "spouseMarch8Text": {
          "type": "string"
        },
        "may9Text": {
          "type": "string"
        },
        "professionalHolidayText": {
          "type": "string"
        },
        "receivedText": {
          "type": "string"
        },
        "birthdayTelegram": {
          "type": "string"
        }
      }
    },
    "ContactEmailInputDto": {
      "required": [
        "emailType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "emailType": {
          "enum": [
            "Personal",
            "Work",
            "Other"
          ],
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "isShowForChief": {
          "type": "boolean"
        }
      }
    },
    "ContactPhoneInputDto": {
      "required": [
        "phoneType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "phoneType": {
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "Other"
          ],
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "isShowForChief": {
          "type": "boolean"
        }
      }
    },
    "MessengerInputDto": {
      "required": [
        "messengerType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "messengerType": {
          "enum": [
            "WhatsApp",
            "Telegram",
            "Facebook",
            "Viber"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WebLinkInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "SpouseInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "firstNameNative": {
          "type": "string"
        },
        "lastNameNative": {
          "type": "string"
        },
        "firstNameEng": {
          "type": "string"
        },
        "lastNameEng": {
          "type": "string"
        },
        "appeal": {
          "$ref": "#/definitions/AppealDto"
        },
        "birthDay": {
          "format": "int32",
          "type": "integer"
        },
        "birthMonth": {
          "format": "int32",
          "type": "integer"
        },
        "birthYear": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "WorkplaceInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "appointment": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "isCurrent": {
          "type": "boolean"
        },
        "isPrimary": {
          "type": "boolean"
        }
      }
    },
    "EducationInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "placeName": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ContactOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "biography": {
          "$ref": "#/definitions/BiographyOutputDto"
        },
        "congratulation": {
          "$ref": "#/definitions/ContactCongratulationDto"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "additionalContacts": {
          "type": "string"
        },
        "verifyEmail": {
          "type": "string"
        },
        "communityMembership": {
          "type": "string"
        },
        "meetingHistory": {
          "type": "string"
        },
        "isShownInContacts": {
          "type": "boolean"
        },
        "notes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedNoteOutputDto"
          }
        },
        "assignments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentOutputDto"
          }
        },
        "meetings": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactMeetingOutputDto"
          }
        },
        "emails": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactEmailOutputDto"
          }
        },
        "phones": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPhoneOutputDto"
          }
        },
        "messengers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessengerOutputDto"
          }
        },
        "webLinks": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebLinkOutputDto"
          }
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "ContactMeetingOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "dateStart": {
          "type": "integer"
        },
        "sourceGmt": {
          "format": "int32",
          "type": "integer"
        },
        "dateEnd": {
          "type": "integer"
        },
        "destinationGmt": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate",
            "Flight"
          ],
          "type": "string"
        }
      }
    },
    "ContactEmailOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "emailType": {
          "enum": [
            "Personal",
            "Work",
            "Other"
          ],
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "isShowForChief": {
          "type": "boolean"
        }
      }
    },
    "ContactPhoneOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "phoneType": {
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "Other"
          ],
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "isShowForChief": {
          "type": "boolean"
        }
      }
    },
    "MessengerOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "messengerType": {
          "enum": [
            "WhatsApp",
            "Telegram",
            "Facebook",
            "Viber"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "WebLinkOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "EditContactDto": {
      "required": [
        "isShownInContacts"
      ],
      "type": "object",
      "properties": {
        "biography": {
          "$ref": "#/definitions/BiographyInputDto"
        },
        "congratulation": {
          "$ref": "#/definitions/ContactCongratulationDto"
        },
        "additionalContacts": {
          "type": "string"
        },
        "verifyEmail": {
          "type": "string"
        },
        "communityMembership": {
          "type": "string"
        },
        "meetingHistory": {
          "type": "string"
        },
        "isShownInContacts": {
          "type": "boolean"
        },
        "emails": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactEmailInputDto"
          }
        },
        "phones": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPhoneInputDto"
          }
        },
        "messengers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessengerInputDto"
          }
        },
        "webLinks": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebLinkInputDto"
          }
        }
      }
    },
    "ContactImportExceptionDto": {
      "type": "object",
      "properties": {
        "contactImportException": {
          "type": "string"
        }
      }
    },
    "EditContactStatusDto": {
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        }
      }
    },
    "ContactsAutocompleteListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "description": "ФИО контакта.",
          "type": "string"
        },
        "companyName": {
          "description": "Название компании (с признаком основное место работы)",
          "type": "string"
        },
        "job": {
          "description": "Должность (с признаком основное место работы)",
          "type": "string"
        }
      }
    },
    "ContactIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ContactMobileListItemDto": {
      "type": "object",
      "properties": {
        "happyBirthdayText": {
          "type": "string"
        },
        "toWishHappyBirthday": {
          "type": "boolean"
        },
        "congratulationEmail": {
          "type": "string"
        },
        "congratulationTitle": {
          "type": "string"
        },
        "biographyId": {
          "$ref": "#/definitions/BiographyRefDto"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "meetingHistory": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "PhoneMobileListItemDto": {
      "type": "object",
      "properties": {
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "type": {
          "enum": [
            "Home",
            "Mobile",
            "Work",
            "Other"
          ],
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "isShowForChief": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "EmailMobileListItemDto": {
      "type": "object",
      "properties": {
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "type": {
          "enum": [
            "Personal",
            "Work",
            "Other"
          ],
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "isShowForChief": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "MessengerMobileListItemDto": {
      "type": "object",
      "properties": {
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "type": {
          "enum": [
            "WhatsApp",
            "Telegram",
            "Facebook",
            "Viber"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DigestDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "categoryName": {
          "enum": [
            "Morning",
            "Foreign",
            "DayPicture"
          ],
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shortMessage": {
          "type": "string"
        },
        "notes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedNoteOutputDto"
          }
        },
        "assignments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentOutputDto"
          }
        },
        "document": {
          "$ref": "#/definitions/RelatedDocumentOutputDto"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfoDto"
          }
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "RelatedDocumentOutputDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "categoryId": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "Page[DigestListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DigestListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "DigestListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "category": {
          "enum": [
            "Morning",
            "Foreign",
            "DayPicture"
          ],
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "noteCount": {
          "format": "int32",
          "type": "integer"
        },
        "assignmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        }
      }
    },
    "CreateDigestDto": {
      "required": [
        "categoryName",
        "message",
        "publishedAt",
        "shortMessage",
        "showAllChiefs",
        "document"
      ],
      "type": "object",
      "properties": {
        "categoryName": {
          "enum": [
            "Morning",
            "Foreign",
            "DayPicture"
          ],
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shortMessage": {
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        },
        "document": {
          "$ref": "#/definitions/DocumentRefDto"
        }
      }
    },
    "AvailableUserRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditDigestDto": {
      "required": [
        "categoryName",
        "message",
        "publishedAt",
        "shortMessage",
        "showAllChiefs",
        "document"
      ],
      "type": "object",
      "properties": {
        "categoryName": {
          "enum": [
            "Morning",
            "Foreign",
            "DayPicture"
          ],
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shortMessage": {
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        },
        "document": {
          "$ref": "#/definitions/DocumentRefDto"
        }
      }
    },
    "EditDigestStatusDto": {
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        }
      }
    },
    "DigestsAutocompleteListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "DigestIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DigestMobileListItemDto": {
      "type": "object",
      "properties": {
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "categoryName": {
          "enum": [
            "Morning",
            "Foreign",
            "DayPicture"
          ],
          "type": "string"
        },
        "shortMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "documentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DigestReadMarksIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DigestReadMarkMobileListItemDto": {
      "type": "object",
      "properties": {
        "digestId": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "Page[DocumentListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "DocumentListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "documentCategory": {
          "type": "string"
        },
        "noteCount": {
          "format": "int32",
          "type": "integer"
        },
        "assignmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "eventTitle": {
          "type": "string"
        },
        "entityType": {
          "enum": [
            "Meeting",
            "Flight",
            "Conference"
          ],
          "type": "string"
        },
        "dateStart": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CreateDocumentDto": {
      "required": [
        "id",
        "title",
        "isPrivate",
        "isGeneral",
        "isInterestingPlace"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "categoryId": {
          "format": "uuid",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eventIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentEventDto"
          }
        },
        "isPrivate": {
          "type": "boolean"
        },
        "isGeneral": {
          "type": "boolean"
        },
        "isInterestingPlace": {
          "type": "boolean"
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "DocumentEventDto": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DocumentOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "categoryId": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "isInterestingPlace": {
          "type": "boolean"
        },
        "fileName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eventIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentEventOutputDto"
          }
        },
        "notes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedNoteOutputDto"
          }
        },
        "assignments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentListItemDto"
          }
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "isEditable": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "isGeneral": {
          "type": "boolean"
        }
      }
    },
    "DocumentEventOutputDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "eventType": {
          "enum": [
            "Conference",
            "Meeting",
            "Flight"
          ],
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditDocumentDto": {
      "required": [
        "title",
        "isPrivate",
        "isGeneral",
        "isInterestingPlace"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "categoryId": {
          "format": "uuid",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eventIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentEventDto"
          }
        },
        "isPrivate": {
          "type": "boolean"
        },
        "isGeneral": {
          "type": "boolean"
        },
        "isInterestingPlace": {
          "type": "boolean"
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "DocumentsAutocompleteListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "FileStreamResult": {
      "type": "object",
      "properties": {
        "fileStream": {
          "$ref": "#/definitions/Stream"
        },
        "contentType": {
          "type": "string",
          "readOnly": true
        },
        "fileDownloadName": {
          "type": "string"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "entityTag": {
          "$ref": "#/definitions/EntityTagHeaderValue"
        },
        "enableRangeProcessing": {
          "type": "boolean"
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "canRead": {
          "type": "boolean",
          "readOnly": true
        },
        "canSeek": {
          "type": "boolean",
          "readOnly": true
        },
        "canTimeout": {
          "type": "boolean",
          "readOnly": true
        },
        "canWrite": {
          "type": "boolean",
          "readOnly": true
        },
        "length": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "position": {
          "format": "int64",
          "type": "integer"
        },
        "readTimeout": {
          "format": "int32",
          "type": "integer"
        },
        "writeTimeout": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EntityTagHeaderValue": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/StringSegment",
          "readOnly": true
        },
        "isWeak": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "StringSegment": {
      "type": "object",
      "properties": {
        "buffer": {
          "type": "string",
          "readOnly": true
        },
        "offset": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "length": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        },
        "hasValue": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Page[DocumentCategoryListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentCategoryListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "DocumentCategoryListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "showForWidget": {
          "type": "boolean"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "CreateDocumentCategoryDto": {
      "required": [
        "name",
        "showForWidget"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortName": {
          "maxLength": 32,
          "type": "string"
        },
        "showForWidget": {
          "type": "boolean"
        }
      }
    },
    "DocumentCategoryDto": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string"
        },
        "showForWidget": {
          "type": "boolean"
        },
        "createdAt": {
          "format": "int64",
          "type": "integer"
        },
        "updatedAt": {
          "format": "int64",
          "type": "integer"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditDocumentCategoryDto": {
      "required": [
        "name",
        "showForWidget"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortName": {
          "maxLength": 32,
          "type": "string"
        },
        "showForWidget": {
          "type": "boolean"
        }
      }
    },
    "DocumentCategoryIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DocumentCategoryMobileListItemDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "showForWidget": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DocumentIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DocumentMobileListItemDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "flightIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRelationOutputDto"
          }
        },
        "meetingIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRelationOutputDto"
          }
        },
        "conferenceIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRelationOutputDto"
          }
        },
        "newsIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRelationOutputDto"
          }
        },
        "digestIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRelationOutputDto"
          }
        },
        "assignmentCommentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRelationOutputDto"
          }
        },
        "categoryId": {
          "$ref": "#/definitions/DocumentCategoryRefDto"
        },
        "fileTs": {
          "format": "date-time",
          "type": "string"
        },
        "isEditable": {
          "type": "boolean"
        },
        "isInterestingPlace": {
          "type": "boolean"
        },
        "shouldPreload": {
          "type": "boolean"
        },
        "shouldEncrypt": {
          "type": "boolean"
        },
        "isGeneral": {
          "type": "boolean"
        },
        "showInDocuments": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DocumentRelationOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DocumentCategoryRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "Page[EventItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventItemDto"
          },
          "readOnly": true
        }
      }
    },
    "EventItemDto": {
      "type": "object",
      "properties": {
        "dateStart": {
          "type": "integer"
        },
        "dateEnd": {
          "type": "integer"
        },
        "sourceGmt": {
          "format": "int32",
          "type": "integer"
        },
        "destinationGmt": {
          "format": "int32",
          "type": "integer"
        },
        "eventType": {
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate",
            "Flight"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationOutputDto"
        },
        "eventStatus": {
          "enum": [
            "Draft",
            "Directed",
            "Canceled",
            "Completed"
          ],
          "type": "string"
        },
        "participantStatus": {
          "enum": [
            "Pending",
            "Declined",
            "Confirmed"
          ],
          "type": "string"
        },
        "noteCount": {
          "format": "int32",
          "type": "integer"
        },
        "assignmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "isEditable": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EventAutocompleteDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "EditParticipantStatusDto": {
      "required": [
        "participantStatus"
      ],
      "type": "object",
      "properties": {
        "participantStatus": {
          "enum": [
            "Declined",
            "Confirmed"
          ],
          "type": "string"
        }
      }
    },
    "MeetingDto": {
      "type": "object",
      "properties": {
        "eventType": {
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate"
          ],
          "type": "string"
        },
        "dateStart": {
          "type": "integer"
        },
        "dateEnd": {
          "type": "integer"
        },
        "gmt": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "agenda": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationOutputDto"
        },
        "meetingStatus": {
          "enum": [
            "Draft",
            "Directed",
            "Canceled",
            "Completed"
          ],
          "type": "string"
        },
        "participantStatus": {
          "enum": [
            "Pending",
            "Declined",
            "Confirmed"
          ],
          "type": "string"
        },
        "participants": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParticipantOutputDto"
          }
        },
        "organizerId": {
          "format": "uuid",
          "type": "string"
        },
        "isEditable": {
          "type": "boolean"
        },
        "conferenceId": {
          "format": "uuid",
          "type": "string"
        },
        "conferenceTitle": {
          "type": "string"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfoDto"
          }
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "assignments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentOutputDto"
          }
        },
        "notes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedNoteOutputDto"
          }
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEventDocumentOutputDto"
          }
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EventParticipantOutputDto": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "participantStatus": {
          "enum": [
            "Pending",
            "Declined",
            "Confirmed"
          ],
          "type": "string"
        },
        "contactId": {
          "format": "uuid",
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "companyPosition": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "format": "uuid",
          "type": "string"
        },
        "biographyId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditMeetingDto": {
      "description": "Edit meeting",
      "required": [
        "title",
        "location",
        "dateStart",
        "dateEnd",
        "gmt",
        "eventType",
        "isChecked",
        "documents"
      ],
      "type": "object",
      "properties": {
        "conferenceId": {
          "format": "uuid",
          "description": "Conference that includes the meeting",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "description": "Document with picture",
          "type": "string"
        },
        "title": {
          "description": "Meeting title",
          "type": "string"
        },
        "description": {
          "description": "Meeting description with formatting",
          "type": "string"
        },
        "shortDescription": {
          "description": "Meeting description without formatting",
          "type": "string"
        },
        "agenda": {
          "description": "Meeting agenda",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationInputDto",
          "description": "Meeting location"
        },
        "dateStart": {
          "format": "date-time",
          "description": "Meeting start date",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "description": "Meeting end date",
          "type": "string"
        },
        "gmt": {
          "format": "int32",
          "description": "Greenwich Mean Time offset",
          "type": "integer"
        },
        "users": {
          "description": "Массив помощников, кому доступна встреча",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        },
        "participants": {
          "description": "Meeting participants",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParticipantContentDto"
          }
        },
        "eventType": {
          "description": "Meeting type",
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate"
          ],
          "type": "string"
        },
        "isChecked": {
          "description": "Check date period conflict",
          "type": "boolean"
        },
        "documents": {
          "description": "Documents, attached to the conference",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventDocumentDto"
          }
        },
        "isExchangeSyncNeeded": {
          "description": "Send meeting invitations to email",
          "type": "boolean"
        }
      }
    },
    "EventParticipantContentDto": {
      "type": "object",
      "properties": {
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "biographyId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CreateMeetingDto": {
      "description": "Create meeting",
      "required": [
        "title",
        "location",
        "dateStart",
        "dateEnd",
        "gmt",
        "eventType",
        "isChecked",
        "documents"
      ],
      "type": "object",
      "properties": {
        "conferenceId": {
          "format": "uuid",
          "description": "Conference that includes the meeting",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "description": "Document with picture",
          "type": "string"
        },
        "title": {
          "description": "Meeting title",
          "type": "string"
        },
        "description": {
          "description": "Meeting description with formatting",
          "type": "string"
        },
        "shortDescription": {
          "description": "Meeting description without formatting",
          "type": "string"
        },
        "agenda": {
          "description": "Meeting agenda",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationInputDto",
          "description": "Meeting location"
        },
        "dateStart": {
          "format": "date-time",
          "description": "Meeting start date",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "description": "Meeting end date",
          "type": "string"
        },
        "gmt": {
          "format": "int32",
          "description": "Greenwich Mean Time offset",
          "type": "integer"
        },
        "users": {
          "description": "Массив помощников, кому доступна встреча",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        },
        "participants": {
          "description": "Meeting participants",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParticipantContentDto"
          }
        },
        "eventType": {
          "description": "Meeting type",
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate"
          ],
          "type": "string"
        },
        "isChecked": {
          "description": "Check date period conflict",
          "type": "boolean"
        },
        "documents": {
          "description": "Documents, attached to the conference",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventDocumentDto"
          }
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "FlightDto": {
      "type": "object",
      "properties": {
        "flightCode": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "dateStart": {
          "type": "integer"
        },
        "dateEnd": {
          "type": "integer"
        },
        "eventType": {
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate",
            "Flight"
          ],
          "type": "string"
        },
        "sourceGmt": {
          "format": "int32",
          "type": "integer"
        },
        "destinationGmt": {
          "format": "int32",
          "type": "integer"
        },
        "flightStatus": {
          "enum": [
            "Draft",
            "Directed",
            "Canceled",
            "Completed"
          ],
          "type": "string"
        },
        "participantStatus": {
          "enum": [
            "Pending",
            "Declined",
            "Confirmed"
          ],
          "type": "string"
        },
        "participants": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParticipantOutputDto"
          }
        },
        "organizerId": {
          "format": "uuid",
          "type": "string"
        },
        "isEditable": {
          "type": "boolean"
        },
        "conferenceId": {
          "format": "uuid",
          "type": "string"
        },
        "conferenceTitle": {
          "type": "string"
        },
        "sourceAirport": {
          "$ref": "#/definitions/AirportInfoDto"
        },
        "destinationAirport": {
          "$ref": "#/definitions/AirportInfoDto"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "notes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedNoteOutputDto"
          }
        },
        "assignments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentOutputDto"
          }
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEventDocumentOutputDto"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditFlightDto": {
      "description": "Edit flight",
      "required": [
        "title",
        "dateStart",
        "dateEnd",
        "sourceAirport",
        "destinationAirport",
        "sourceGmt",
        "destinationGmt",
        "isChecked",
        "documents"
      ],
      "type": "object",
      "properties": {
        "conferenceId": {
          "format": "uuid",
          "description": "Conference that includes the flight",
          "type": "string"
        },
        "title": {
          "description": "Flight title",
          "type": "string"
        },
        "description": {
          "description": "Flight description with formatting",
          "type": "string"
        },
        "shortDescription": {
          "description": "Flight description without formatting",
          "type": "string"
        },
        "dateStart": {
          "format": "date-time",
          "description": "Flight start date",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "description": "Flight end date",
          "type": "string"
        },
        "participants": {
          "description": "Flight participants",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParticipantContentDto"
          }
        },
        "flightCode": {
          "description": "Flight code",
          "type": "string"
        },
        "sourceAirport": {
          "$ref": "#/definitions/AirportRefDto",
          "description": "Source airport"
        },
        "destinationAirport": {
          "$ref": "#/definitions/AirportRefDto",
          "description": "Destination airport"
        },
        "sourceGmt": {
          "format": "int32",
          "description": "Source Greenwich Mean Time offset",
          "type": "integer"
        },
        "destinationGmt": {
          "format": "int32",
          "description": "Destination Greenwich Mean Time offset",
          "type": "integer"
        },
        "isChecked": {
          "description": "Check date period conflict",
          "type": "boolean"
        },
        "documents": {
          "description": "Documents, attached to the flight",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventDocumentDto"
          }
        }
      }
    },
    "AirportRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CreateFlightDto": {
      "description": "Create flight",
      "required": [
        "title",
        "dateStart",
        "dateEnd",
        "sourceAirport",
        "destinationAirport",
        "sourceGmt",
        "destinationGmt",
        "isChecked",
        "documents"
      ],
      "type": "object",
      "properties": {
        "conferenceId": {
          "format": "uuid",
          "description": "Conference that includes the flight",
          "type": "string"
        },
        "title": {
          "description": "Flight title",
          "type": "string"
        },
        "description": {
          "description": "Flight description with formatting",
          "type": "string"
        },
        "shortDescription": {
          "description": "Flight description without formatting",
          "type": "string"
        },
        "dateStart": {
          "format": "date-time",
          "description": "Flight start date",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "description": "Flight end date",
          "type": "string"
        },
        "participants": {
          "description": "Flight participants",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventParticipantContentDto"
          }
        },
        "flightCode": {
          "description": "Flight code",
          "type": "string"
        },
        "sourceAirport": {
          "$ref": "#/definitions/AirportRefDto",
          "description": "Source airport"
        },
        "destinationAirport": {
          "$ref": "#/definitions/AirportRefDto",
          "description": "Destination airport"
        },
        "sourceGmt": {
          "format": "int32",
          "description": "Source Greenwich Mean Time offset",
          "type": "integer"
        },
        "destinationGmt": {
          "format": "int32",
          "description": "Destination Greenwich Mean Time offset",
          "type": "integer"
        },
        "isChecked": {
          "description": "Check date period conflict",
          "type": "boolean"
        },
        "documents": {
          "description": "Documents, attached to the flight",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventDocumentDto"
          }
        }
      }
    },
    "FlightMobileListItemDto": {
      "type": "object",
      "properties": {
        "conferenceEventId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "title": {
          "type": "string"
        },
        "sourceGmt": {
          "format": "int32",
          "type": "integer"
        },
        "destinationGmt": {
          "format": "int32",
          "type": "integer"
        },
        "sourceAirportId": {
          "$ref": "#/definitions/AirportRefDto"
        },
        "destinationAirportId": {
          "$ref": "#/definitions/AirportRefDto"
        },
        "flightCode": {
          "type": "string"
        },
        "dateStart": {
          "format": "date-time",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "flightToParticipants": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventToParticipantRefDto"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "EventToParticipantRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EventParticipantListFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "FlightParticipantMobileListItemDto": {
      "type": "object",
      "properties": {
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "biographyId": {
          "$ref": "#/definitions/EventParticipantMobileRefDto"
        },
        "flightId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "EventParticipantMobileRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "MeetingMobileListItemDto": {
      "type": "object",
      "properties": {
        "conferenceEventId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "agenda": {
          "type": "string"
        },
        "locationAddress": {
          "type": "string"
        },
        "locationLongitude": {
          "format": "float",
          "type": "number"
        },
        "locationLatitude": {
          "format": "float",
          "type": "number"
        },
        "locationComment": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "gmt": {
          "format": "int32",
          "type": "integer"
        },
        "dateStart": {
          "format": "date-time",
          "type": "string"
        },
        "dateEnd": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "enum": [
            "MeetingExternal",
            "MeetingInternal",
            "MeetingPrivate",
            "Flight"
          ],
          "type": "string"
        },
        "meetingToParticipants": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventToParticipantRefDto"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "MeetingParticipantMobileListItemDto": {
      "type": "object",
      "properties": {
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "biographyId": {
          "$ref": "#/definitions/EventParticipantMobileRefDto"
        },
        "meetingId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "MediaDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "webPageLink": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfoDto"
          }
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "EditMediaDto": {
      "required": [
        "title",
        "showAllChiefs"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "webPageLink": {
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        }
      }
    },
    "Page[MediaListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "MediaListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "webPageLink": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "CreateMediaDto": {
      "required": [
        "title",
        "showAllChiefs"
      ],
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "webPageLink": {
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        }
      }
    },
    "EditMediaStatusDto": {
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        }
      }
    },
    "MediaIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "MediaMobileListItemDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "webPageLink": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "NewsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "typeId": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "companyId": {
          "format": "uuid",
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "sourceLink": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfoDto"
          }
        },
        "isDayTopic": {
          "type": "boolean"
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedDocumentOutputDto"
          }
        },
        "notes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedNoteOutputDto"
          }
        },
        "assignments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentOutputDto"
          }
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "Page[NewsListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewsListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "NewsListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "typeName": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "noteCount": {
          "format": "int32",
          "type": "integer"
        },
        "assignmentCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateNewsDto": {
      "required": [
        "publishedAt",
        "title",
        "typeId",
        "companyId",
        "message",
        "showAllChiefs",
        "isDayTopic"
      ],
      "type": "object",
      "properties": {
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "typeId": {
          "format": "uuid",
          "type": "string"
        },
        "companyId": {
          "format": "uuid",
          "type": "string"
        },
        "sourceLink": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        },
        "isDayTopic": {
          "type": "boolean"
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        }
      }
    },
    "EditNewsDto": {
      "required": [
        "publishedAt",
        "title",
        "typeId",
        "companyId",
        "message",
        "showAllChiefs",
        "isDayTopic"
      ],
      "type": "object",
      "properties": {
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "typeId": {
          "format": "uuid",
          "type": "string"
        },
        "companyId": {
          "format": "uuid",
          "type": "string"
        },
        "sourceLink": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "showAllChiefs": {
          "type": "boolean"
        },
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableUserRefDto"
          }
        },
        "documents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        },
        "isDayTopic": {
          "type": "boolean"
        }
      }
    },
    "EditNewsStatusDto": {
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        }
      }
    },
    "NewsAutocompleteListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "NewsTypeDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GetNewsTypeDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "Page[NewsTypeItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewsTypeItemDto"
          },
          "readOnly": true
        }
      }
    },
    "NewsTypeItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CreateNewsTypeDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "EditNewsTypeDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "NewsLoadingSettingsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "createStatus": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "newsTypeId": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "CreateNewsLoadingSettingsDto": {
      "required": [
        "isEnabled",
        "createStatus"
      ],
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean"
        },
        "createStatus": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "newsTypeId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "Page[InboxJournalEntryDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboxJournalEntryDto"
          },
          "readOnly": true
        }
      }
    },
    "InboxJournalEntryDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "exchangeId": {
          "type": "string"
        },
        "messageFrom": {
          "type": "string"
        },
        "messageSubject": {
          "type": "string"
        },
        "messageBody": {
          "type": "string"
        },
        "updatedAt": {
          "type": "integer"
        },
        "messageType": {
          "enum": [
            "ItNews",
            "MediaPicture",
            "Morning",
            "CompanyNews"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "Draft",
            "Published"
          ],
          "type": "string"
        },
        "isProcessed": {
          "type": "boolean"
        },
        "isFailed": {
          "type": "boolean"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "NewsIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "NewsMobileListItemDto": {
      "type": "object",
      "properties": {
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "typeId": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "companyId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "sourceLink": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "message": {
          "type": "string"
        },
        "documentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        },
        "isDayTopic": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "NewsReadMarksIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "NewsReadMarkMobileListItemDto": {
      "type": "object",
      "properties": {
        "newsId": {
          "format": "uuid",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "Page[NoteListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoteListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "NoteListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "entityType": {
          "enum": [
            "Flight",
            "Contact",
            "Meeting",
            "Conference",
            "Document",
            "MediaNews",
            "Digest",
            "WithoutLink"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "NoteOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "entityType": {
          "enum": [
            "Flight",
            "Contact",
            "Meeting",
            "Conference",
            "Document",
            "MediaNews",
            "Digest",
            "WithoutLink"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "NoteIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "NoteMobileListItemDto": {
      "type": "object",
      "properties": {
        "flightId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "conferenceId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "meetingId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "documentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "newsId": {
          "$ref": "#/definitions/NewsRefDto"
        },
        "digestId": {
          "$ref": "#/definitions/DigestRefDto"
        },
        "text": {
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "Page[NotificationWebDto]": {
      "type": "object",
      "properties": {
        "pageNum": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationWebDto"
          }
        },
        "itemsTotal": {
          "format": "int32",
          "type": "integer"
        },
        "unreadCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NotificationWebDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "entityType": {
          "enum": [
            "Birthdays",
            "EventsToday",
            "Meeting",
            "Flight",
            "Conference",
            "Birthday",
            "DocumentNote",
            "EventNote",
            "NewsNote",
            "ContactNote",
            "NoteWithoutLink"
          ],
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        }
      }
    },
    "ExternalNotificationAccountListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "CreateExternalNotificationAccountDto": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ExternalNotificationAccountOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "NotificationIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "NotificationMobileDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "entityType": {
          "enum": [
            "Birthdays",
            "Events",
            "Other"
          ],
          "type": "string"
        },
        "meetingId": {
          "$ref": "#/definitions/SystemEntityRefDto"
        },
        "flightId": {
          "$ref": "#/definitions/SystemEntityRefDto"
        },
        "conferenceId": {
          "$ref": "#/definitions/SystemEntityRefDto"
        },
        "contactId": {
          "$ref": "#/definitions/SystemEntityRefDto"
        },
        "noteId": {
          "$ref": "#/definitions/SystemEntityRefDto"
        },
        "isRead": {
          "type": "boolean"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "SystemEntityRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "PerformerListFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "PerformerMobileListItemDto": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "userId": {
          "$ref": "#/definitions/UserRefDto"
        },
        "isActualPerformer": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "RoleOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "UserAdministrator",
            "SystemAdministrator",
            "Chief",
            "Assistant",
            "MediaAssistant"
          ],
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "permissions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionListItemDto"
          }
        }
      }
    },
    "PermissionListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "namePermission": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "RoleInputDto": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "enum": [
            "UserAdministrator",
            "SystemAdministrator",
            "Chief",
            "Assistant",
            "MediaAssistant"
          ],
          "type": "string"
        },
        "permissions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionRefDto"
          }
        }
      }
    },
    "PermissionRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Page[SyncDataReportDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyncDataReportDto"
          },
          "readOnly": true
        }
      }
    },
    "SyncDataReportDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "dateTimeUtc": {
          "type": "integer"
        },
        "dateTimeStringLocal": {
          "type": "string"
        },
        "userLogin": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "exceptionType": {
          "type": "string"
        },
        "exception": {
          "type": "string"
        }
      }
    },
    "WeatherDto": {
      "type": "object",
      "properties": {
        "currentTemperature": {
          "format": "int32",
          "type": "integer"
        },
        "futureTemperature": {
          "format": "int32",
          "type": "integer"
        },
        "serviceURI": {
          "type": "string"
        }
      }
    },
    "WeatherForecastDto": {
      "type": "object",
      "properties": {
        "timezoneOffset": {
          "format": "int32",
          "type": "integer"
        },
        "current": {
          "$ref": "#/definitions/WeatherCurrentDto"
        },
        "forecast": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeatherForecastItemDto"
          }
        },
        "serviceURI": {
          "type": "string"
        }
      }
    },
    "WeatherCurrentDto": {
      "type": "object",
      "properties": {
        "date": {
          "format": "int32",
          "type": "integer"
        },
        "temperature": {
          "format": "int32",
          "type": "integer"
        },
        "weatherDescShort": {
          "type": "string"
        },
        "weatherDescLong": {
          "type": "string"
        },
        "weatherIcon": {
          "type": "string"
        }
      }
    },
    "WeatherForecastItemDto": {
      "type": "object",
      "properties": {
        "date": {
          "format": "int32",
          "type": "integer"
        },
        "minTemperature": {
          "format": "int32",
          "type": "integer"
        },
        "maxTemperature": {
          "format": "int32",
          "type": "integer"
        },
        "weatherDescShort": {
          "type": "string"
        },
        "weatherDescLong": {
          "type": "string"
        },
        "weatherIcon": {
          "type": "string"
        }
      }
    },
    "SyncDataInputDto": {
      "type": "object",
      "properties": {
        "currentGmt": {
          "format": "int32",
          "type": "integer"
        },
        "isOpening": {
          "type": "boolean"
        },
        "lastSyncTimeSeconds": {
          "type": "integer"
        },
        "updatedData": {
          "$ref": "#/definitions/UpdatedDataDto"
        }
      }
    },
    "UpdatedDataDto": {
      "type": "object",
      "properties": {
        "note": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoteSyncDataInputDto"
          }
        },
        "documentAnnotation": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentAnnotationSyncDataInputDto"
          }
        },
        "notification": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationSyncDataInputDto"
          }
        },
        "user": {
          "$ref": "#/definitions/UserSyncDataInputDto"
        },
        "assignment": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentSyncDataInputDto"
          }
        },
        "performer": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentPerformerSyncDataInputDto"
          }
        },
        "assignmentToPerformer": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentToPerformerSyncDataInputDto"
          }
        },
        "assignmentComment": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentCommentSyncDataInputDto"
          }
        },
        "document": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSyncDataInputDto"
          }
        },
        "widget": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetSyncDataInputDto"
          }
        },
        "widgetSettings": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetSettingsSyncDataInputDto"
          }
        },
        "newsReads": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewsReadSyncDataDto"
          }
        },
        "digestReads": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DigestReadSyncDataDto"
          }
        }
      }
    },
    "NoteSyncDataInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "flightId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "conferenceId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "meetingId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "documentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "newsId": {
          "$ref": "#/definitions/NewsRefDto"
        },
        "digestId": {
          "$ref": "#/definitions/DigestRefDto"
        },
        "text": {
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DocumentAnnotationSyncDataInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "documentId": {
          "format": "uuid",
          "type": "string"
        },
        "config": {
          "type": "string"
        },
        "updatedAt": {
          "type": "integer"
        }
      }
    },
    "NotificationSyncDataInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "type": "integer"
        },
        "updatedAt": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "enum": [
            "Events",
            "Birthdays",
            "Other"
          ],
          "type": "string"
        },
        "meetingId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "flightId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "conferenceId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "noteId": {
          "$ref": "#/definitions/NoteRefDto"
        },
        "isRead": {
          "type": "boolean"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "UserSyncDataInputDto": {
      "type": "object",
      "properties": {
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssignmentSyncDataInputDto": {
      "required": [
        "status",
        "number",
        "isPersonal",
        "shouldBeDeleted"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "conferenceId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "meetingId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "flightId": {
          "$ref": "#/definitions/EventRefDto"
        },
        "contactId": {
          "$ref": "#/definitions/ContactRefDto"
        },
        "newsId": {
          "$ref": "#/definitions/NewsRefDto"
        },
        "digestId": {
          "$ref": "#/definitions/DigestRefDto"
        },
        "documentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent",
            "Working",
            "Completed",
            "Cancelled"
          ],
          "type": "string"
        },
        "priority": {
          "enum": [
            "Low",
            "Medium",
            "High",
            "Critical"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "audioDocumentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "factFinishDate": {
          "format": "date-time",
          "type": "string"
        },
        "confirmDate": {
          "format": "date-time",
          "type": "string"
        },
        "assignmentToPerformer": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentToPerformerRefDto"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "AssignmentPerformerSyncDataInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "photoDocumentId": {
          "$ref": "#/definitions/DocumentRefDto"
        },
        "userId": {
          "$ref": "#/definitions/UserRefDto"
        },
        "isActualPerformer": {
          "type": "boolean"
        }
      }
    },
    "AssignmentToPerformerSyncDataInputDto": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "assignmentId": {
          "$ref": "#/definitions/AssignmentRefDto"
        },
        "performerId": {
          "$ref": "#/definitions/AssignmentPerformerRefDto"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "finishDate": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        },
        "isReady": {
          "type": "boolean"
        }
      }
    },
    "AssignmentCommentSyncDataInputDto": {
      "required": [
        "id",
        "text",
        "assignmentId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "assignmentId": {
          "$ref": "#/definitions/AssignmentRefDto"
        },
        "status": {
          "enum": [
            "Draft",
            "EmailSent"
          ],
          "type": "string"
        },
        "documentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentRefDto"
          }
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DocumentSyncDataInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileTs": {
          "format": "int64",
          "type": "integer"
        },
        "categoryId": {
          "$ref": "#/definitions/DocumentCategoryRefDto"
        },
        "categoryName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "flightIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventRefDto"
          }
        },
        "meetingIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventRefDto"
          }
        },
        "conferenceIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventRefDto"
          }
        },
        "mediaNewsIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewsRefDto"
          }
        },
        "digestIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DigestRefDto"
          }
        },
        "assignmentCommentIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentCommentRefDto"
          }
        },
        "shouldBeDeleted": {
          "type": "boolean"
        },
        "isEditable": {
          "type": "boolean"
        },
        "isInterestingPlace": {
          "type": "boolean"
        },
        "shouldPreload": {
          "type": "boolean"
        },
        "isGeneral": {
          "type": "boolean"
        },
        "showInDocuments": {
          "type": "boolean"
        },
        "isExchangeSyncNeeded": {
          "type": "boolean"
        }
      }
    },
    "WidgetSyncDataInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "WidgetSettingsSyncDataInputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "widget": {
          "$ref": "#/definitions/WidgetRefDto"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "NewsReadSyncDataDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "newsId": {
          "format": "uuid",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DigestReadSyncDataDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "digestId": {
          "format": "uuid",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "NoteRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "AssignmentPerformerRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "AssignmentCommentRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "WidgetRefDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "SyncDataOutputListDto": {
      "type": "object",
      "properties": {
        "syncTimeSeconds": {
          "type": "integer"
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        },
        "updatedIdList": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyncDataOutputListItemDto"
          }
        },
        "errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyncDataErrorDto"
          }
        }
      }
    },
    "SyncDataOutputListItemDto": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "enum": [
            "Airport",
            "Assignment",
            "Biography",
            "Category",
            "Comment",
            "Company",
            "Conference",
            "Contact",
            "Digest",
            "Document",
            "Education",
            "Email",
            "Flight",
            "Media",
            "Meeting",
            "Messenger",
            "News",
            "Note",
            "Notification",
            "Performer",
            "Phone",
            "Spouse",
            "User",
            "Workplace",
            "AssignmentToPerformer",
            "MeetingToParticipant",
            "FlightToParticipant",
            "Widget",
            "WidgetSettings",
            "NewsRead",
            "DigestRead"
          ],
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "SyncDataErrorDto": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "readOnly": true
        },
        "stackTrace": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppVersionDto": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "UpdateAppVersionDto": {
      "type": "object",
      "properties": {
        "version": {
          "description": "Requires to have at least major and minor version numbers separated by comma. System.Version",
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "UserOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "roleId": {
          "format": "uuid",
          "type": "string"
        },
        "roleType": {
          "enum": [
            "UserAdministrator",
            "SystemAdministrator",
            "Chief",
            "Assistant",
            "MediaAssistant"
          ],
          "type": "string"
        },
        "chiefId": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "devices": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceOutputDto"
          }
        },
        "status": {
          "enum": [
            "Active",
            "Blocked"
          ],
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "assistants": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfoDto"
          }
        }
      }
    },
    "DeviceOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "isBlocked": {
          "type": "boolean"
        },
        "deviceId": {
          "format": "uuid",
          "type": "string"
        },
        "deviceToken": {
          "type": "string"
        },
        "updatedAt": {
          "type": "integer"
        },
        "lastEventPushTime": {
          "type": "integer"
        },
        "lastBirthdayPushTime": {
          "type": "integer"
        },
        "deviceModel": {
          "type": "string"
        },
        "iosVersion": {
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        }
      }
    },
    "EditUserDto": {
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "roleId": {
          "format": "uuid",
          "type": "string"
        },
        "chiefId": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Active",
            "Blocked"
          ],
          "type": "string"
        }
      }
    },
    "CreateUserDto": {
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "roleId": {
          "format": "uuid",
          "type": "string"
        },
        "chiefId": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Active",
            "Blocked"
          ],
          "type": "string"
        },
        "isInternal": {
          "type": "boolean"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Page[UserListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "UserListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "roleType": {
          "enum": [
            "UserAdministrator",
            "SystemAdministrator",
            "Chief",
            "Assistant",
            "MediaAssistant"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "Active",
            "Blocked"
          ],
          "type": "string"
        },
        "autoBlock": {
          "type": "boolean"
        },
        "performer": {
          "type": "boolean"
        },
        "chiefId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "UserAdBasicInfoDto": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "loginSigma": {
          "type": "string"
        }
      }
    },
    "EditUserStatusDto": {
      "type": "object",
      "properties": {
        "blocked": {
          "type": "boolean"
        }
      }
    },
    "UserRoleListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "roleType": {
          "enum": [
            "UsersAdministrator",
            "SystemAdministrator",
            "Chief",
            "Assistant",
            "MediaAssistant"
          ],
          "type": "string"
        }
      }
    },
    "EditUserSettingDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "assignmentAuthorStatus": {
          "enum": [
            "Actual",
            "NotActual",
            "None"
          ],
          "type": "string"
        },
        "performerStatus": {
          "enum": [
            "Actual",
            "NotActual",
            "None"
          ],
          "type": "string"
        },
        "backgroundId": {
          "format": "uuid",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "birthdayPushTimeHour": {
          "format": "int32",
          "type": "integer"
        },
        "birthdayPushTimeMinute": {
          "format": "int32",
          "type": "integer"
        },
        "cacheLimitSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "enableBirthdayPush": {
          "type": "boolean"
        },
        "enableEventPush": {
          "type": "boolean"
        },
        "eventPushTimeHour": {
          "format": "int32",
          "type": "integer"
        },
        "eventPushTimeMinute": {
          "format": "int32",
          "type": "integer"
        },
        "synchronizeDashboard": {
          "type": "boolean"
        }
      }
    },
    "UserSettingsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "assignmentAuthorStatus": {
          "enum": [
            "Actual",
            "NotActual",
            "None"
          ],
          "type": "string"
        },
        "performerStatus": {
          "enum": [
            "Actual",
            "NotActual",
            "None"
          ],
          "type": "string"
        },
        "backgroundId": {
          "format": "uuid",
          "type": "string"
        },
        "photoDocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "birthdayPushTimeHour": {
          "format": "int32",
          "type": "integer"
        },
        "birthdayPushTimeMinute": {
          "format": "int32",
          "type": "integer"
        },
        "cacheLimitSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "enableBirthdayPush": {
          "type": "boolean"
        },
        "enableEventPush": {
          "type": "boolean"
        },
        "eventPushTimeHour": {
          "format": "int32",
          "type": "integer"
        },
        "eventPushTimeMinute": {
          "format": "int32",
          "type": "integer"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "synchronizeDashbord": {
          "type": "boolean"
        }
      }
    },
    "UserMobileSettings": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "backgroundId": {
          "format": "uuid",
          "type": "string"
        },
        "cacheLimitSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "permissions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionListItemDto"
          }
        },
        "updatedAt": {
          "type": "integer"
        }
      }
    },
    "Page[DeviceOutputDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceOutputDto"
          },
          "readOnly": true
        }
      }
    },
    "EditDeviceBlockStatusDto": {
      "type": "object",
      "properties": {
        "blocked": {
          "type": "boolean"
        }
      }
    },
    "Page[TrustedSenderOutputListItemDto]": {
      "type": "object",
      "properties": {
        "limitFrom": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "limitSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "items": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrustedSenderOutputListItemDto"
          },
          "readOnly": true
        }
      }
    },
    "TrustedSenderOutputListItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "type": "integer"
        },
        "updatedAt": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "CreateTrustedSenderDto": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "TrustedSenderOutputDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "type": "integer"
        },
        "updatedAt": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/UserInfoDto"
        },
        "updateAuthor": {
          "$ref": "#/definitions/UserInfoDto"
        }
      }
    },
    "EditTrustedSenderDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "UserIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "EditDeviceTokenDto": {
      "type": "object",
      "properties": {
        "deviceToken": {
          "type": "string"
        }
      }
    },
    "WidgetIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "WidgetMobileListItemDto": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    },
    "WidgetSettingsIdFilterDto": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "rqID": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "WidgetSettingsMobileListItemDto": {
      "type": "object",
      "properties": {
        "widget": {
          "$ref": "#/definitions/WidgetRefDto"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "shouldBeDeleted": {
          "type": "boolean"
        }
      }
    }
  }
}